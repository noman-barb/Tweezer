# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
import image_exchange_pb2 as image__exchange__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in image_exchange_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ImageExchangeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadImage = channel.unary_unary(
                '/images.ImageExchange/UploadImage',
                request_serializer=image__exchange__pb2.ImageChunk.SerializeToString,
                response_deserializer=image__exchange__pb2.UploadAck.FromString,
                _registered_method=True)
        self.GetLatestImage = channel.unary_unary(
                '/images.ImageExchange/GetLatestImage',
                request_serializer=image__exchange__pb2.LatestImageRequest.SerializeToString,
                response_deserializer=image__exchange__pb2.LatestImageReply.FromString,
                _registered_method=True)
        self.GetLatestTracks = channel.unary_unary(
                '/images.ImageExchange/GetLatestTracks',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                _registered_method=True)
        self.GetTrackingConfig = channel.unary_unary(
                '/images.ImageExchange/GetTrackingConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                _registered_method=True)
        self.UpdateTrackingConfig = channel.unary_unary(
                '/images.ImageExchange/UpdateTrackingConfig',
                request_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                _registered_method=True)
        self.StreamFrames = channel.unary_stream(
                '/images.ImageExchange/StreamFrames',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=image__exchange__pb2.FrameEnvelope.FromString,
                _registered_method=True)
        self.GetStorageConfig = channel.unary_unary(
                '/images.ImageExchange/GetStorageConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=image__exchange__pb2.StorageConfig.FromString,
                _registered_method=True)
        self.UpdateStorageConfig = channel.unary_unary(
                '/images.ImageExchange/UpdateStorageConfig',
                request_serializer=image__exchange__pb2.StorageConfig.SerializeToString,
                response_deserializer=image__exchange__pb2.StorageConfig.FromString,
                _registered_method=True)


class ImageExchangeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestTracks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrackingConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTrackingConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStorageConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStorageConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImageExchangeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadImage,
                    request_deserializer=image__exchange__pb2.ImageChunk.FromString,
                    response_serializer=image__exchange__pb2.UploadAck.SerializeToString,
            ),
            'GetLatestImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestImage,
                    request_deserializer=image__exchange__pb2.LatestImageRequest.FromString,
                    response_serializer=image__exchange__pb2.LatestImageReply.SerializeToString,
            ),
            'GetLatestTracks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestTracks,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'GetTrackingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrackingConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'UpdateTrackingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTrackingConfig,
                    request_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'StreamFrames': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamFrames,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=image__exchange__pb2.FrameEnvelope.SerializeToString,
            ),
            'GetStorageConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStorageConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=image__exchange__pb2.StorageConfig.SerializeToString,
            ),
            'UpdateStorageConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStorageConfig,
                    request_deserializer=image__exchange__pb2.StorageConfig.FromString,
                    response_serializer=image__exchange__pb2.StorageConfig.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'images.ImageExchange', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('images.ImageExchange', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ImageExchange(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/UploadImage',
            image__exchange__pb2.ImageChunk.SerializeToString,
            image__exchange__pb2.UploadAck.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/GetLatestImage',
            image__exchange__pb2.LatestImageRequest.SerializeToString,
            image__exchange__pb2.LatestImageReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestTracks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/GetLatestTracks',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrackingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/GetTrackingConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTrackingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/UpdateTrackingConfig',
            google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/images.ImageExchange/StreamFrames',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            image__exchange__pb2.FrameEnvelope.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStorageConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/GetStorageConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            image__exchange__pb2.StorageConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStorageConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/images.ImageExchange/UpdateStorageConfig',
            image__exchange__pb2.StorageConfig.SerializeToString,
            image__exchange__pb2.StorageConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
